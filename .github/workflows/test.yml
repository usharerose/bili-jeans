name: Tests

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - docker-compose.yml
      - Dockerfile
      - LICENSE
      - Makefile
      - .dockerignore
      - .gitignore

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        env:
          POETRY_VERSION: 1.8.3
          POETRY_NO_INTERACTION: 1
          POETRY_VIRTUALENVS_CREATE: false
        run: |
          pip install poetry
          poetry install

      - name: Run lint check
        run: make lint

  type-hint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        env:
          POETRY_VERSION: 1.8.3
          POETRY_NO_INTERACTION: 1
          POETRY_VIRTUALENVS_CREATE: false
        run: |
          pip install poetry
          poetry install

      - name: Run type hint check
        run: make type-hint

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    needs: [lint, type-hint]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        env:
          POETRY_VERSION: 1.8.3
          POETRY_NO_INTERACTION: 1
          POETRY_VIRTUALENVS_CREATE: false
        run: |
          pip install poetry
          poetry install

      - name: Run unittest cases
        run: make test
